setwd("~/workspace/data-science/Statistical-Inference/swirl")
library(swirl)
swirl()
choose(3,5) * .8^3 * (.2)^2
choose(3,5) * .8^3 * (.2)^2 +choose(4,5) * .8^4 * (.2)^1 + choose(5,5) * .8^5 * (.2)^0
choose(5,3) * .8^3 * (.2)^2 +choose(5,4) * .8^4 * (.2)^1 + choose(5,5) * .8^5 * (.2)^0
?pbinom
pbinom(2, 5, .8, lower.tail=F)
pbinom(2, size=5, prob=.8, lower.tail=FALSE)
qnorm(.10)
0
qnorm(.975, mean=3, sd=2)
2 + 3*1.96
3 + 2*1.96
qnorm(1200, mean=1020, sd=50, lower.tail=FALSE)
pnorm(1200, mean=1020, sd=50, lower.tail=FALSE)
pnorm((1200-1020)/50, lower.tail=FALSE)
qnorm(.75, mean=1020, sd=50)
pnorm(qnorm(.53))
qnorm(pnorm(.53))
ppois(3, mean=2.5*4)
?ppois
ppois(3, lambda=2.5*4)
pbinom(5, 1000, .01)
ppois(5, .01*1000)
ppois(5, 1000*.01)
1.64/2.2
1.64/2.2
library(ggplot2)
xvals <- seq(-10, 10, by = .01)
dat <- data.frame(
y = c(
dnorm(xvals, mean = 0, sd = 1),
dnorm(xvals, mean = 0, sd = 2),
dnorm(xvals, mean = 0, sd = 3),
dnorm(xvals, mean = 0, sd = 4)
),
x = rep(xvals, 4),
factor = factor(rep(1 : 4, rep(length(xvals), 4)))
)
ggplot(dat, aes(x = x, y = y, color = factor)) + geom_line(size = 2)
swirl()
coinPlot(10)
coinPlot(10000)
qnorm(.95)
0.6 + c(-1,1) * qnorm(0.975)*sqrt(0.6*0.4/100)
x$conf.int
x <- binom.test(60,100)
binom.test(60,100)$conf.int
mywald(.2)
ACCompar(20)
lamb <- 5/94.32
lamb + c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(5, 94.32)
poisson.test(5, 94.32)$conf
info()
main()
myplot(2)
myplot(20)
myplot2(2)
qt(0.975, df=2)
exit()
exit()
myplot(20)
myplot2(20)
sleep
range
range(g1)
range(g2)
difference <- g1 - g2
difference <- g2 - g1
mean(difference)
s <- sd(difference)
mn + c(-1,1) * qt(.975, 9) * s / sqrt(10)
t.test(difference)$conf.int
sp <- (7)*(15.34)^2 + (20)*(18.23)^2
ns <- 21 + 8 - 2
sp <- sqrt(sp/ns)
(127.44 - 132.86) + c(-1,1)*sp*sqrt(1/8 + 1/21)
(132.86-127.44) + c(-1,1)*qt(.975,ns)*sp*sqrt(1/8 + 1/21)
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
sp <- sqrt(((9)*var(g1) + (9)*var(g2))/18)
sp <- sqrt((9*var(g1)+9*var(g2))/18)
md+c(-1,1)*qt(.975,18)*sp*sqrt(1/10+1/10)
t.test(g2, g1, paired=FALSE, var.equal=TRUE)
t.test(g2, g1, paired=FALSE, var.equal=TRUE)$conf
t.test(g2, g1, paired=TRUE)$conf
num <- (15.34^2/8 +18.23^2/21)Ë†2
num <- (15.34^2/8 +18.23^2/21)^2
den <- 15.34^4/8^2/7 + 18.23^4/21^2/20
mydf <- num/den
132.86 - 127.44 + c(-1,1)*qt(0.975, mydf)*sqrt((15.34^2/8) + (18.23^2/21))
132.86 - 127.44 + c(-1,1)*qt(0.975, mydf)*sqrt(15.34^2/8 + 18.23^2/21)
10/sqrt(32)
s
s / sqrt(32)
s / sqrt(n)
10 / sqrt(100)
(32-30) / 10/sqrt(100)
2 / 1
2 / 1/4
2 / 10/4
2 / (10/4)
15
qt(.95, 15)
dim(fs)
t.test(fs$sheight, fs$sheight, paired=TRUE)
t.test(fs$sheight-fs$fheight)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
mybin[7]
mybin[7]; mybin[8]
mybin[8]
mybin[7]
mybin[7] mybin[8]
mybin[7]
mybin[7] & mybin[8]
.144
mybin[7]
mybin[8]
mybin[7]=.144 mybin[8]=.035
mybin[7]=.144 and mybin[8]=.035
mybin[7]=.144
info()
skip()
qt(2.5, 15, lower.tail=FALSE)
pt(2.5, 15, lower.tail=FALSE)
qnorm(0.95)
qnorm(0.99)
pnorm(2)
pnorm(2, lower.tail=FALSE)
mybin
pbinom(6, size=8, prob=.5, lower.tail=FALSE)
pbinom(7, size=8, prob=.5, lower.tail=TRUE)
ppois(9, 5, lower.tail=FALSE)
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z <- qnorm(.95)
pnorm(30+z, mean=30, lower.tail=FALSE)
pnorm(30+z, mean=32, lower.tail=FALSE)
pnorm(30+z, mean=32, sd=1, lower.tail=FALSE)
pnorm(30+z, mean=32, sd=2, lower.tail=FALSE)
pnorm(30+z*2, mean=32, sd=2, lower.tail=FALSE)
power.t.test(n = 16, delta = 2 / 4, sd=1, type = "one.sample", alt =
| "one.sided")$power
power.t.test(n = 16, delta = 2 / 4, sd=1, type = "one.sample", alt ="one.sided")$power
power.t.test(n = 16, delta = 2, sd=4, type = "one.sample", alt ="one.sided")$power
power.t.test(n = 16, delta = 100, sd=200, type = "one.sample", alt ="one.sided")$power
power.t.test(power = .8, delta = 2 / 4, sd=1, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 2, sd=4, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 100, sd=200, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, n=26, sd=1)$delta
power.t.test(power = .8, n=26, sd=1, type = "one.sample", alt = "one.sided")$delta
power.t.test(power = .8, n=27, sd=1, type = "one.sample", alt = "one.sided")$delta
head(pValues)
sum(pValues)
sum(pValues < 0.05)
sum(pvalues < p.adjust(method="bonferroni"))
sum(pValues < p.adjust(method="bonferroni"))
sum(pValues < p.adjust(pValues, method="bonferroni"))
sum(p.adjust(pValues,method="bonferroni") < 0.05)
sum(p.adjust(pValues,method="BH") < 0.05)
tail(trueStatus)
table(pValues2 < .05, trueStatus)
24/10000
24/500
table(p.adjust(pValues2, method="bonferroni") < .05, trueStatus)
table(p.adjust(pValues2, method="BH") < .05, trueStatus)
1/6
sum(1\:6)/6
sum(1/6)/6
sum(1\:6)/6
sum(1:6)/6
print(g2)
head(sh)
nh
median(resampledMedians)
median(sh)
sam <- sample(fh, nh*1000, replace=TRUE)
sam <- sample(fh, nh*B, replace=TRUE)
resam <- matrix(sam, B, nh)
meds <- apply(resam, 1, median)
fh - meds
median(meds) - median(fh)
sd(meds)
sd(resampledMedians)/sqrt(length(resampledMedians))
sd(resampledMedians)
quantile(resampledMedians, c(.025, .975))
quantile(meds, c(.025, .975))
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
range(Cdata$count)
BCounts
BCcounts
group
testStat
obs <- testStat(BCcounts, group)
obs
mean(Bdata$count)
mean(Bdata$count)-mean(Cdata$count)
sample(group)
perms <- sapply(1 : 10000, function(i)
| testStat(BCcounts, sample(group)))
perms <- sapply(1 : 10000, function(i)
testStat(BCcounts, sample(group)))
mean(perms > obs)
obs <- testStat(DEcounts, group)
testStat(DEcounts, group)
perms <- sapply(1 : 10000, function(i) testStat(DEcounts, sample(group)))
?t.tes
?t.test
source('~/.active-rstudio-document', echo=TRUE)
mn <- 1100
s <- 30
n <- 9
mn + c(-1, 1) * qt(.975, n-1) * s / sqrt(n)
?pvalue
?pq
?pt
pbinom
?pbinom
pbinom(3, 4, .5)
pbinom(3, 4)
pbinom(3, 4, .75)
?ppois
ppois(10, 1787)
qpois(10, 1787)
n <- 9
treated_dif <- -3
placebo_dif <- 1
treated_sd <- 1.5
placebo_sd <- 1.8
pooled_var <- ((n-1) * treated_sd ^ 2 + (n-1) * placebo_sd ^ 2) / (2 * n - 2)
s <- sqrt(pooled_var)
treated_dif - placebo_dif + c(-1, 1) * qt(.95, n + n -2) * s * sqrt(1/n + 1/n)
pbinom(3, 5, .5) - pbinom(2,5,.5)
ppois(10, 1787*1/100)
s <- sqrt(pooled_var)
z <- (-3+1) / s
pnorm(z)
pnorm(z) * 2
?power.t.test
power.t.test(100, 0.1-0, 0.04, "one.sample", "one.side")
power.t.test(n=100, delta=0.1-0, sd=0.04, type="one.sample", alt="one.side")
power.t.test(n=100, delta=0.01-0, sd=0.04, type="one.sample", alt="one.side")
power.t.test(power=0.9, delta=0.01-0, sd=0.04, type="one.sample", alt="one.side")
n <- 9
treated_dif <- -3
placebo_dif <- 1
treated_sd <- 1.5
placebo_sd <- 1.8
pooled_var <- ((n-1) * treated_sd ^ 2 + (n-1) * placebo_sd ^ 2) / (2 * n - 2)
s <- sqrt(pooled_var)
z <- (-3+1) / s
pnorm(z) * 2
#1
x <- c(140, 138, 150, 148, 135)
y <- c(132, 135, 151, 146, 130)
t.test(x, y, paired=TRUE, alternative="two.sided")
mn <- 1100
s <- 30
n <- 9
mn + c(-1, 1) * qt(.975, n-1) * s / sqrt(n)
pbinom(3, 5, .5) - pbinom(2,5,.5)
ppois(10, 1787*1/100)
se <- sqrt((1.5^2*8+1.8^2*8)/16 * (1/9 +1/9))
z <- (-3+1) / se
pvalue <- pnorm(z) * 2
pvalue
power.t.test(n=100, delta=0.01-0, sd=0.04, type="one.sample", alt="one.side")
power.t.test(power=0.9, delta=0.01-0, sd=0.04, type="one.sample", alt="one.side")
pvalue
n <- 9
treated_dif <- -3
placebo_dif <- 1
treated_sd <- 1.5
placebo_sd <- 1.8
pooled_var <- ((n-1) * treated_sd ^ 2 + (n-1) * placebo_sd ^ 2) / (2 * n - 2)
s <- sqrt(pooled_var)
z <- (-3+1) / s
pnorm(z) * 2
